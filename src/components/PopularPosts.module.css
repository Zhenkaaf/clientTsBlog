.popular {
    margin-bottom: 30px;
}
.popular__body {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(4, 1fr);
    grid-template-areas:
        "big big middle middle"
        "big big middle middle"
        "big big small1 small2"
        "big big small1 small2";
    gap: 5px;
    height: calc(100vh - 100px);
}

.popular__big {
    grid-area: big;
}
.popular__middle {
    grid-area: middle;
}
.popular__small1 {
    grid-area: small1;
}
.popular__small2 {
    grid-area: small2;
}

.post {
    height: 100%;
    min-height: 0;
    position: relative;
    /* min-height: 0; — это фикс для проблем с растяжением элементов внутри CSS Grid/Flexbox.
     Позволяет принудительно ограничить высоту в рамках сетки. */
}
.post__imageWrapper {
    width: 100%;
    height: 100%;
}
.post__img {
    width: 100%;
    height: 100%;
    transition-duration: 0.3s;
    object-fit: cover;
}
.post__info {
    background-color: var(--color-secondary);
    padding: 6px 12px 0px;
    display: inline-block;
    position: absolute;
    bottom: 15px;
    z-index: 1;
    cursor: pointer;
    transition-duration: 0.3s;
}

.post__info:hover {
    background-color: var(--color-btn-hover);
}
.post__infoIconEye {
    padding-top: 3px;
}
.post__infoViews {
    display: flex;
    align-items: center;
    /*  gap: 10px; */
}
.post__infoTitle {
}
.post__infoArrowLine {
    display: flex;
    align-items: center;
    gap: 10px;
}
.post__infoIcon {
    margin-top: 3px;
}
@media (max-width: 768px) {
    .popular__body {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        grid-template-rows: repeat(2, 1fr);
        grid-template-areas:
            "big  middle"
            "small1  small2";
        gap: 5px;
        height: calc(100vh - 100px);
    }
}
